plugins {
    id 'java'
    id 'war'
    id 'idea'
}

war {
    duplicatesStrategy = 'exclude'
}

group 'fr.aura.markandweb'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.2'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

configurations {
    compile.exclude module: "javax.activation-api"
    compile.exclude module: "javax.annotation-api"
    compile.exclude module: "javax.inject"
    compile.exclude module: "javax.interceptor.api"
    compile.exclude module: "javax.jms-api"
    compile.exclude module: "javax.json.bind-api"
    compile.exclude module: "javax.json-api"
    compile.exclude module: "javax.persistence-api"
    //compile.exclude module: "javax.servlet.jsp.jstl-api"
    compile.exclude module: "javax.transaction-api"

    configureEach {
        exclude group: 'xml-apis', module: 'xml-apis'
        exclude group: 'javax.annotation', module: 'javax.annotation-api'
        exclude group: 'com.sun.xml.ws', module: 'policy'
    }

}

dependencies {

    implementation 'org.jetbrains:annotations:24.0.0'
    compileOnly('jakarta.platform:jakarta.jakartaee-web-api:10.0.0')
    compileOnly('jakarta.enterprise.concurrent:jakarta.enterprise.concurrent-api:3.0.2')
    compileOnly('jakarta.jms:jakarta.jms-api:3.1.0')
    compileOnly('jakarta.mvc:jakarta.mvc-api:2.1.0')
    compileOnly("jakarta.platform:jakarta.jakartaee-api:10.0.0")
    implementation 'javax.servlet:jstl:1.2'

    //DI Container
    implementation ("jakarta.enterprise:jakarta.enterprise.cdi-api:4.0.1")

    //Jakarta and Sun XML Implementations
    compileOnly("jakarta.enterprise:jakarta.enterprise.cdi-api:4.0.1")
    implementation("jakarta.activation:jakarta.activation-api:2.1.2")
    implementation("jakarta.xml.bind:jakarta.xml.bind-api:4.0.0")
    implementation("jakarta.xml.ws:jakarta.xml.ws-api:4.0.0")
    implementation("jakarta.xml.soap:jakarta.xml.soap-api:3.0.0")
    implementation("com.sun.xml.bind:jaxb-core:4.0.1")
    implementation("com.sun.xml.bind:jaxb-impl:4.0.1")

    implementation("com.sun.xml.ws:jaxws-ri:4.0.1") {
        exclude group: 'org.glassfish.metro', module: 'policy'
    }
    implementation("org.glassfish.metro:webservices-rt:4.0.2") {
        exclude group: 'org.glassfish.metro', module: 'policy'
    }
    implementation("org.glassfish.jaxb:jaxb-runtime:4.0.1")
    //implementation("com.sun.xml.ws:rt:4.0.1")
    implementation("com.sun.xml.messaging.saaj:saaj-impl:3.0.2")
    //implementation("com.sun.xml.ws:jaxws-rt:4.0.1")


    //Jakarta EE Annotations
    compileOnly("jakarta.servlet:jakarta.servlet-api:6.0.0")
    implementation("jakarta.annotation:jakarta.annotation-api:2.1.1")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api:2.1.1")

    //Tomcat Implementations
    implementation("org.apache.tomcat:tomcat-websocket:11.0.0-M5")
    implementation("org.apache.tomcat.embed:tomcat-embed-core:11.0.0-M5")
    implementation("org.apache.tomcat.embed:tomcat-embed-jasper:11.0.0-M5")
    compileOnly("org.apache.tomcat:tomcat-catalina:11.0.0-M5")
    implementation("org.apache.openwebbeans:openwebbeans-web:2.0.22")

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

configurations {
    jaxws
}

dependencies {
    jaxws 'com.sun.xml.ws:jaxws-tools:4.0.1'
}

task wsimport {
    ext.destDir = file("${projectDir}/src/main/generated")
    doLast {
        ant {
            sourceSets.main.output.classesDirs.inits()
            destDir.mkdirs()
            taskdef(name: 'wsimport',
                    classname: 'com.sun.tools.ws.ant.WsImport',
                    classpath: configurations.jaxws.asPath
            )
            wsimport(keep: true,
                    sourcedestdir: 'src/main/java/',
                    package: "fr.aura.merkandweb.gena_server.controllers.xml",
                    wsdl: "${projectDir}/src/main/resources/echo.wsdl") {
                xjcarg(value: "-XautoNameResolution")
            }
        }
    }
}

compileJava {
    dependsOn wsimport
    source wsimport.destDir
}
